{
    "openapi": "3.0.0",
    "info": {
        "title": "Absen Ok API",
        "version": "0.1"
    },
    "paths": {
        "/api/get-shift-schedules": {
            "get": {
                "tags": [
                    "Attendance Request"
                ],
                "summary": "Get user's schedule",
                "description": "Retrieve the schedule of the authenticated user.",
                "operationId": "App\\Http\\Controllers\\Attendance\\UserRequestOptions\\UserAttendanceRequest::getSchedule",
                "responses": {
                    "201": {
                        "description": "Success: User schedule retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Get schedule for the authenticated user.",
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "description": "Get schedule for the authenticated user.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Data not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Get schedule for the authenticated user.",
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "description": "Get schedule for the authenticated user.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clock-in": {
            "post": {
                "tags": [
                    "Attendance Request"
                ],
                "summary": "Clock in for user attendance",
                "description": "Clock in for user attendance at the office location. Requires proper shift, time, description, and location within a specified radius.",
                "operationId": "App\\Http\\Controllers\\Attendance\\UserRequestOptions\\UserAttendanceRequest::ClockIn_Rev",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "shift": {
                                        "description": "User's shift.",
                                        "type": "string"
                                    },
                                    "clock_in": {
                                        "description": "Clock-in time.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Clock-in description.",
                                        "type": "string"
                                    },
                                    "upload_file": {
                                        "description": "Image file for clock-in.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "point": {
                                        "description": "User's current location [latitude, longitude].",
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: User clocked in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Clock in for user attendance.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Clock in for user attendance.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Clock in for user attendance.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Invalid input data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Clock in for user attendance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error: User location outside of the specified radius.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Clock in for user attendance.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Clock in for user attendance.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Clock in for user attendance.",
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clock-out": {
            "post": {
                "tags": [
                    "Attendance Request"
                ],
                "summary": "Clock out for user attendance",
                "description": "Clock in for user attendance at the office location. Requires proper shift, time, description, and location within a specified radius.",
                "operationId": "App\\Http\\Controllers\\Attendance\\UserRequestOptions\\UserAttendanceRequest::ClockOut",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "shift": {
                                        "description": "User's shift.",
                                        "type": "string"
                                    },
                                    "clock_out": {
                                        "description": "Clock-out time.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Clock-in description.",
                                        "type": "string"
                                    },
                                    "upload_file": {
                                        "description": "Image file for clock-in.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "point": {
                                        "description": "User's current location [latitude, longitude].",
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: User clockout in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Clock out for user attendance.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Clock out for user attendance.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Clock out for user attendance.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Invalid input data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Clock out for user attendance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error: User location outside of the specified radius.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Clock out for user attendance.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Clock out for user attendance.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Clock out for user attendance.",
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/leave-request": {
            "post": {
                "tags": [
                    "Leave Request"
                ],
                "summary": "Process leave request",
                "description": "Process leave request for the authenticated user. Requires the type, start date, end date, reason, and upload of a PDF document.",
                "operationId": "App\\Http\\Controllers\\Attendance\\UserRequestOptions\\UserLeaveRequest::LeaveRequestProcess",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "description": "Type of leave request.",
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "description": "Start date of the leave.",
                                        "type": "string"
                                    },
                                    "start_end": {
                                        "description": "End date of the leave.",
                                        "type": "string"
                                    },
                                    "reason": {
                                        "description": "Reason for the leave request.",
                                        "type": "string"
                                    },
                                    "upload_file": {
                                        "description": "PDF document for the leave request.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Error: Incomplete input data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Process leave request for the authenticated user.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Process leave request for the authenticated user.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Process leave request for the authenticated user.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success: Leave request processed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Process leave request for the authenticated user.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Process leave request for the authenticated user.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shift-request": {
            "post": {
                "tags": [
                    "Shift Request"
                ],
                "summary": "Process shift request",
                "description": "Process shift request for the authenticated user. Requires the on date, old shift start and end times, new shift start and end times, and reason.",
                "operationId": "App\\Http\\Controllers\\Attendance\\UserRequestOptions\\UserShiftRequest::ShiftRequestProcess",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "on_date": {
                                        "description": "Date of the shift change.",
                                        "type": "string"
                                    },
                                    "old_shift_start": {
                                        "description": "Start time of the old shift.",
                                        "type": "string"
                                    },
                                    "old_shift_end": {
                                        "description": "End time of the old shift.",
                                        "type": "string"
                                    },
                                    "new_shift_start": {
                                        "description": "Start time of the new shift.",
                                        "type": "string"
                                    },
                                    "new_shift_end": {
                                        "description": "End time of the new shift.",
                                        "type": "string"
                                    },
                                    "reason": {
                                        "description": "Reason for the shift request.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Error: Incomplete input data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Process shift request for the authenticated user.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Process shift request for the authenticated user.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Process shift request for the authenticated user.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success: Shift request processed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Process shift request for the authenticated user.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Process shift request for the authenticated user.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Process shift request for the authenticated user.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/send-mail": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Send email verification for password reset",
                "description": "Send an email verification containing OTP for password reset.",
                "operationId": "App\\Http\\Controllers\\Auth\\Email_Verification\\SendMailController::sendMailVerification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email.",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Email sent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Send email verification with OTP for password reset.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Invalid email or other validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Send email verification with OTP for password reset.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-otp": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Verify OTP for password reset",
                "description": "Verify the OTP for the password reset process.",
                "operationId": "App\\Http\\Controllers\\Auth\\Email_Verification\\SendMailController::verifyOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "otp": {
                                        "description": "OTP sent to the user's email.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: OTP verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Verify the OTP sent to the user's email.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Invalid OTP or expired OTP.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Verify the OTP sent to the user's email.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update-password": {
            "post": {
                "tags": [
                    "Password Update"
                ],
                "summary": "Update user's password",
                "description": "Update the user's password with a new one.",
                "operationId": "App\\Http\\Controllers\\Auth\\Email_Verification\\UpdatePasswordController::updatePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "new_password": {
                                        "description": "New password for the user.",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Password updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Update the user's password.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Email not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Update the user's password.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Update the user's password.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/google/login": {
            "get": {
                "tags": [
                    "Authentication login with google"
                ],
                "summary": "Redirect to Google for authentication",
                "description": "Redirects to Google for authentication using OAuth2.",
                "operationId": "App\\Http\\Controllers\\Auth\\Google_auth\\GAuthController_rev::redirectToGoogle",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "https://accounts.google.com/o/oauth2/auth?client_id=YOUR_CLIENT_ID&redirect_uri=YOUR_REDIRECT_URI&response_type=code&scope=email"
                            }
                        }
                    }
                }
            }
        },
        "/auth/google/callback": {
            "get": {
                "tags": [
                    "Authentication login with google"
                ],
                "summary": "Handle Google Callback",
                "description": "Handles the Google callback after authentication using OAuth2.",
                "operationId": "App\\Http\\Controllers\\Auth\\Google_auth\\GAuthController_rev::handleGoogleCallback",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and get the JWT token",
                "description": "Authenticate the user and return a JWT token for authentication.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Get a JWT via given credentials.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "Get a JWT via given credentials.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "Get a JWT via given credentials.",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "Get a JWT via given credentials.",
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "expires_in": {
                                            "description": "Get a JWT via given credentials.",
                                            "type": "integer",
                                            "example": "2880"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Get a JWT via given credentials.",
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get the authenticated user",
                "description": "Retrieve the authenticated user's information.",
                "operationId": "App\\Http\\Controllers\\Auth\\JWT_Auth\\AuthenticationController::me",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log the user out",
                "description": "Invalidate the current token and log the user out.",
                "operationId": "App\\Http\\Controllers\\Auth\\JWT_Auth\\AuthenticationController::logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Log the user out (Invalidate the token).",
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh a token",
                "description": "Refresh the current token and return a new token.",
                "operationId": "App\\Http\\Controllers\\Auth\\JWT_Auth\\AuthenticationController::refresh",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "Refresh a token.",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "Refresh a token.",
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "expires_in": {
                                            "description": "Refresh a token.",
                                            "type": "integer",
                                            "example": "2880"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user-employment": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieve employment details for the authenticated user",
                "description": "Retrieve employment details for the authenticated user based on the user's ID.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Account\\UserEmployment::index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user-info": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get user info",
                "description": "Retrieve information about the logged-in user. Requires authentication.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Account\\UserProfile::show",
                "responses": {
                    "200": {
                        "description": "Success: User information retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve user information.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Retrieve user information.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Retrieve user information.",
                                            "properties": {
                                                "id": {
                                                    "description": "Retrieve user information.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: User data not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve user information.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Retrieve user information.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-profile": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update the user's profile information",
                "description": "Update the user's profile information based on the provided request data.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Account\\UserProfile::update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "description": "Update the user's profile information.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Update the user's profile information.",
                                        "type": "string"
                                    },
                                    "date_of_birth": {
                                        "description": "Update the user's profile information.",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "Update the user's profile information.",
                                        "type": "string"
                                    },
                                    "contact": {
                                        "description": "Update the user's profile information.",
                                        "type": "string"
                                    },
                                    "religion": {
                                        "description": "Update the user's profile information.",
                                        "type": "string"
                                    },
                                    "image_profile": {
                                        "description": "Update the user's profile information.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Update the user's profile information.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Update the user's profile information.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Data update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Update the user's profile information.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Update the user's profile information.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Required fields missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Update the user's profile information.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Update the user's profile information.",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Update the user's profile information.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Update the user's profile information.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Update the user's profile information.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/list-announcements": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Displays entire list of announcements",
                "description": "All users can see announcements made by the project manager.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Notifications\\AnnouncementController::index",
                "responses": {
                    "200": {
                        "description": "Success: Announcement data list was successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Displays entire list of announcements.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Displays entire list of announcements.",
                                            "type": "string",
                                            "example": "Announcement Data List"
                                        },
                                        "data": {
                                            "description": "Displays entire list of announcements.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Displays entire list of announcements.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "picture": {
                                                        "description": "Displays entire list of announcements.",
                                                        "type": "string",
                                                        "example": "xTZCMwEpjGda3cIy4up6nMhu5urO5vufMaKjsBzP.jpg"
                                                    },
                                                    "message": {
                                                        "description": "Displays entire list of announcements.",
                                                        "type": "string",
                                                        "example": "Announcement Title"
                                                    },
                                                    "created_at": {
                                                        "description": "Displays entire list of announcements.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-26T06:20:35.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Displays entire list of announcements.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-26T06:20:35.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Announcement Data List Not Found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Displays entire list of announcements.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Displays entire list of announcements.",
                                            "type": "string",
                                            "example": "Announcement Data List Not Found"
                                        },
                                        "data": {
                                            "description": "Displays entire list of announcements.",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/add-announcement": {
            "post": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Save new announcements.",
                "description": "Project manager makes a new announcement for users.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Notifications\\AnnouncementController::store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "picture": {
                                        "description": "Supporting images for announcements.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "message": {
                                        "description": "Announcement message.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Error: Validation failed. Please check your input data!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Save new announcements.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Save new announcements.",
                                            "type": "string",
                                            "example": "Validation failed. Please check your input data!"
                                        },
                                        "data": {
                                            "description": "Save new announcements.",
                                            "properties": {
                                                "picture": {
                                                    "description": "Pesan kesalahan untuk bidang 'picture'.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The picture field is required."
                                                    ]
                                                },
                                                "message": {
                                                    "description": "Pesan kesalahan untuk bidang 'message'.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The message field is required."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success: Successfully added a new announcement.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Save new announcements.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Save new announcements.",
                                            "type": "boolean",
                                            "example": "Successfully added a new announcement."
                                        },
                                        "data": {
                                            "description": "Save new announcements.",
                                            "properties": {
                                                "picture": {
                                                    "description": "URL gambar.",
                                                    "type": "string",
                                                    "example": "/storage/images/a9qy0q3d1xCkrVy55m34vxuIx9dbXcvmLmQLDwnO.jpg"
                                                },
                                                "message": {
                                                    "description": "Pesan atau informasi terkait gambar.",
                                                    "type": "string",
                                                    "example": "Announcement message."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Failed to make a new announcement!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Save new announcements.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Save new announcements.",
                                            "type": "string",
                                            "example": "Failed to make a new announcement!"
                                        },
                                        "data": {
                                            "description": "Save new announcements.",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-announcement/{announcementId}": {
            "put": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Updates announcements by ID.",
                "description": "Project managers can change announcements based on selected data.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Notifications\\AnnouncementController::update",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "picture": {
                                        "description": "Supporting images for announcements.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "message": {
                                        "description": "Announcement message.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Error: Validation failed. Please check your input data!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Updates announcements by ID.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Updates announcements by ID.",
                                            "type": "string",
                                            "example": "Validation failed. Please check your input data!"
                                        },
                                        "data": {
                                            "description": "Updates announcements by ID.",
                                            "properties": {
                                                "picture": {
                                                    "description": "Pesan kesalahan untuk bidang 'picture'.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The picture field is required."
                                                    ]
                                                },
                                                "message": {
                                                    "description": "Pesan kesalahan untuk bidang 'message'.",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The message field is required."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success: Successfully updated the announcement.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Updates announcements by ID.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Updates announcements by ID.",
                                            "type": "boolean",
                                            "example": "Successfully updated the announcement."
                                        },
                                        "data": {
                                            "description": "Updates announcements by ID.",
                                            "properties": {
                                                "picture": {
                                                    "description": "URL gambar.",
                                                    "type": "string",
                                                    "example": "/storage/images/a9qy0q3d1xCkrVy55m34vxuIx9dbXcvmLmQLDwnO.jpg"
                                                },
                                                "message": {
                                                    "description": "Pesan atau informasi terkait gambar.",
                                                    "type": "string",
                                                    "example": "Announcement message."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete-announcement/{announcementId}": {
            "delete": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Remove the specified announcement.",
                "description": "Remove the specified announcement.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Notifications\\AnnouncementController::destroy",
                "parameters": [
                    {
                        "name": "announcementId",
                        "in": "path",
                        "description": "Project managers can delete specified announcements.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement successfully deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Remove the specified announcement.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Remove the specified announcement.",
                                            "type": "string",
                                            "example": "Announcement ID data ($announcementId) deleted successfully!"
                                        },
                                        "data": {
                                            "description": "Remove the specified announcement.",
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID Announcement ($announcementId) not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Remove the specified announcement.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Remove the specified announcement.",
                                            "type": "string",
                                            "example": "ID Announcement ($announcementId) not found!"
                                        },
                                        "data": {
                                            "description": "Remove the specified announcement.",
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to delete announcement!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Remove the specified announcement.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Remove the specified announcement.",
                                            "type": "string",
                                            "example": "Failed to delete announcement!"
                                        },
                                        "data": {
                                            "description": "Remove the specified announcement.",
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all-notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Shows all notifications",
                "description": "Project Manager can view/retrieve clock in and clock out request data from users (members).",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Notifications\\NotificationController::allNotifications",
                "responses": {
                    "200": {
                        "description": "Success: Notification data list was successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows all notifications.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Shows all notifications.",
                                            "type": "string",
                                            "example": "Notification Data List"
                                        },
                                        "data": {
                                            "description": "Shows all notifications.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Shows all notifications.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "description": "Shows all notifications.",
                                                        "type": "string",
                                                        "example": "Clock In"
                                                    },
                                                    "message": {
                                                        "description": "Shows all notifications.",
                                                        "type": "string",
                                                        "example": "User makes a clock in request."
                                                    },
                                                    "user_id": {
                                                        "description": "Shows all notifications.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "read_status_for_admin": {
                                                        "description": "Shows all notifications.",
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "read_status_for_user": {
                                                        "description": "Shows all notifications.",
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "created_at": {
                                                        "description": "Shows all notifications.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-26T06:20:35.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Shows all notifications.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-26T06:20:35.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Notification Data List Not Found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows all notifications.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Shows all notifications.",
                                            "type": "string",
                                            "example": "Notification Data List Not Found"
                                        },
                                        "data": {
                                            "description": "Shows all notifications.",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user-notifications/{user_id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Display notification history based on user ID",
                "description": "Users can view their own notification history.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Notifications\\NotificationController::userNotifications",
                "responses": {
                    "200": {
                        "description": "Success: User notification data history was successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Display notification history based on user ID.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Display notification history based on user ID.",
                                            "type": "string",
                                            "example": "List of Notification Data from User ID (1)"
                                        },
                                        "data": {
                                            "description": "Display notification history based on user ID.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "title": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "string",
                                                        "example": "Clock In"
                                                    },
                                                    "message": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "string",
                                                        "example": "User makes a clock out request."
                                                    },
                                                    "user_id": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "read_status_for_admin": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "read_status_for_user": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "created_at": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-26T06:20:35.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "description": "Display notification history based on user ID.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-26T06:20:35.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: User Notification Data History Not Found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Display notification history based on user ID.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Display notification history based on user ID.",
                                            "type": "string",
                                            "example": "User Notification Data History Not Found"
                                        },
                                        "data": {
                                            "description": "Display notification history based on user ID.",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/points": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "Project Manager & Member Access - Get Data Points",
                "description": "User retrieves data points based on login",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Point\\MemberController::index",
                "responses": {
                    "200": {
                        "description": "Success: Data points retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve data points based on logged in users.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Retrieve data points based on logged in users.",
                                            "type": "string",
                                            "example": "Data points retrieved successfully."
                                        },
                                        "data": {
                                            "description": "Retrieve data points based on logged in users.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "success": {
                                                        "description": "Retrieve data points based on logged in users.",
                                                        "type": "boolean"
                                                    },
                                                    "user_id": {
                                                        "description": "Retrieve data points based on logged in users.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "main_points": {
                                                        "description": "Retrieve data points based on logged in users.",
                                                        "type": "integer",
                                                        "example": 300
                                                    },
                                                    "reward_points": {
                                                        "description": "Retrieve data points based on logged in users.",
                                                        "type": "integer",
                                                        "example": 500
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: No data points found for the logged-in user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve data points based on logged in users.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Retrieve data points based on logged in users.",
                                            "type": "string",
                                            "example": "No data points found for the logged-in user."
                                        },
                                        "data": {
                                            "description": "Retrieve data points based on logged in users.",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/claim-rewards": {
            "post": {
                "tags": [
                    "Points"
                ],
                "summary": "Project Manager & Member Access - Claim Rewards",
                "description": "User Claim Rewards",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Point\\MemberController::claimReward",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reward_point_before_claims": {
                                        "description": "Claim Reward Points.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Claim successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Claim Reward Points.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Claim Reward Points.",
                                            "type": "string",
                                            "example": "Claim successful."
                                        },
                                        "data": {
                                            "description": "Claim Reward Points.",
                                            "properties": {
                                                "main_points": {
                                                    "description": "Claim Reward Points.",
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "reward_points": {
                                                    "description": "Claim Reward Points.",
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "reward_point_before_claims": {
                                                    "description": "Claim Reward Points.",
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not enough points to claim.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Claim Reward Points.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Claim Reward Points.",
                                            "type": "string",
                                            "example": "Not enough points to claim."
                                        },
                                        "data": {
                                            "description": "Claim Reward Points.",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transfer-points": {
            "post": {
                "tags": [
                    "Points"
                ],
                "summary": "Project Manager & Member Access - Transfer Points",
                "description": "User Transfer reward Points to Main Points",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Point\\MemberController::transferPoint",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reward_points": {
                                        "description": "Transfer reward_points to main_points",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Transfer successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Transfer reward_points to main_points",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Transfer reward_points to main_points",
                                            "type": "string",
                                            "example": "Claim successful."
                                        },
                                        "data": {
                                            "description": "Transfer reward_points to main_points",
                                            "properties": {
                                                "main_points": {
                                                    "description": "Transfer reward_points to main_points",
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "reward_points": {
                                                    "description": "Transfer reward_points to main_points",
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "reward_point_before_claims": {
                                                    "description": "Transfer reward_points to main_points",
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: User points not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Transfer reward_points to main_points",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Transfer reward_points to main_points",
                                            "type": "string",
                                            "example": "User points not found."
                                        },
                                        "data": {
                                            "description": "Transfer reward_points to main_points",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/data-points": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "Project Manager Access - List All Points User",
                "description": "Project Manager takes data points from all members.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Point\\ProjectManagerController::getData",
                "responses": {
                    "200": {
                        "description": "Success: User points found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve the points associated with all current users.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Retrieve the points associated with all current users.",
                                            "type": "string",
                                            "example": "User points found."
                                        },
                                        "data": {
                                            "description": "Retrieve the points associated with all current users.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "description": "Retrieve the points associated with all current users.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "main_points": {
                                                        "description": "Retrieve the points associated with all current users.",
                                                        "type": "integer",
                                                        "example": 300
                                                    },
                                                    "reward_points": {
                                                        "description": "Retrieve the points associated with all current users.",
                                                        "type": "integer",
                                                        "example": 500
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Didn't find any user data points.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve the points associated with all current users.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Retrieve the points associated with all current users.",
                                            "type": "string",
                                            "example": "Didn't find any user data points."
                                        },
                                        "data": {
                                            "description": "Retrieve the points associated with all current users.",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/add-main-points": {
            "post": {
                "tags": [
                    "Points"
                ],
                "summary": "Project Manager Access - Send Main Points",
                "description": "Send main points from the project manager to the project manager or members.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Point\\ProjectManagerController::addMainPoint",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "Id users.",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "main_points": {
                                        "description": "Points",
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Point sent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Sending main points to users",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Sending main points to users",
                                            "type": "string",
                                            "example": "Point Sent"
                                        },
                                        "data": {
                                            "description": "Sending main points to users",
                                            "properties": {
                                                "user_id": {
                                                    "description": "Sending main points to users",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "main_points": {
                                                    "description": "Sending main points to users",
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "reward_points": {
                                                    "description": "Sending main points to users",
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/add-rewards": {
            "post": {
                "tags": [
                    "Points"
                ],
                "summary": "Project Manager Access - Send Reward Points",
                "description": "Send reward points from the project manager to the project manager or members.",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Point\\ProjectManagerController::addRewardPointBeforeClaims",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "Id users.",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "reward_point_before_claims": {
                                        "description": "Points",
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Reward points added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Method: Add reward points before claiming (reward_point_before_claims) to the user's account",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Method: Add reward points before claiming (reward_point_before_claims) to the user's account",
                                            "type": "string",
                                            "example": "Reward points added successfully"
                                        },
                                        "data": {
                                            "description": "Method: Add reward points before claiming (reward_point_before_claims) to the user's account",
                                            "properties": {
                                                "user_id": {
                                                    "description": "Method: Add reward points before claiming (reward_point_before_claims) to the user's account",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "main_points": {
                                                    "description": "Method: Add reward points before claiming (reward_point_before_claims) to the user's account",
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "reward_points": {
                                                    "description": "Method: Add reward points before claiming (reward_point_before_claims) to the user's account",
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "reward_point_before_claims": {
                                                    "description": "Method: Add reward points before claiming (reward_point_before_claims) to the user's account",
                                                    "type": "integer",
                                                    "example": 500
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/task/task-all": {
            "get": {
                "tags": [
                    "Approved Tasks"
                ],
                "summary": "Project Manager Access - Retrieve all to-do lists",
                "description": "Project Manager retrieves all task data",
                "responses": {
                    "200": {
                        "description": "Success: The task was successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve all to-do lists.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Retrieve all to-do lists.",
                                            "type": "string",
                                            "example": "The task was successfully retrieved."
                                        },
                                        "data": {
                                            "description": "Retrieve all to-do lists.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "description": "Retrieve all to-do lists.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Retrieve all to-do lists.",
                                                        "type": "string",
                                                        "example": "Tugas Pertama pada Project Pertama"
                                                    },
                                                    "project_id": {
                                                        "description": "Retrieve all to-do lists.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "deadline": {
                                                        "description": "Retrieve all to-do lists.",
                                                        "type": "string",
                                                        "example": "2023-11-27 10:50:10"
                                                    },
                                                    "description": {
                                                        "description": "Retrieve all to-do lists.",
                                                        "type": "text",
                                                        "example": "Ini adalah tugas pertama saya dari Project pertama"
                                                    },
                                                    "status": {
                                                        "description": "Retrieve all to-do lists.",
                                                        "type": "string",
                                                        "enum": [
                                                            "to-do",
                                                            "in progress",
                                                            "completed"
                                                        ],
                                                        "example": "completed"
                                                    },
                                                    "comment": {
                                                        "description": "Retrieve all to-do lists.",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "comment": {
                                                                    "description": "Retrieve all to-do lists.",
                                                                    "type": "text",
                                                                    "example": "Ini adalah komentar 1"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/task-list": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Project Manager & Member Access - Get All Task",
                "description": "The user retrieves all task data",
                "operationId": "App\\Http\\Controllers\\Dashboard\\Task\\TaskController::getTaskList",
                "responses": {
                    "200": {
                        "description": "Success: All Task retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Get All Task.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Get All Task.",
                                            "type": "string",
                                            "example": "All Task retrieved successfully."
                                        },
                                        "data": {
                                            "description": "Get All Task.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "description": "Get All Task.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Get All Task.",
                                                        "type": "string",
                                                        "example": "Tugas Pertama pada Project Pertama"
                                                    },
                                                    "project_id": {
                                                        "description": "Get All Task.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "deadline": {
                                                        "description": "Get All Task.",
                                                        "type": "string",
                                                        "example": "2023-11-27 10:50:10"
                                                    },
                                                    "description": {
                                                        "description": "Get All Task.",
                                                        "type": "text",
                                                        "example": "Ini adalah tugas pertama saya dari Project pertama"
                                                    },
                                                    "status": {
                                                        "description": "Get All Task.",
                                                        "type": "string",
                                                        "enum": [
                                                            "to-do",
                                                            "in progress",
                                                            "completed"
                                                        ],
                                                        "example": "completed"
                                                    },
                                                    "comment": {
                                                        "description": "Get All Task.",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "comment": {
                                                                    "description": "Get All Task.",
                                                                    "type": "text",
                                                                    "example": "Ini adalah komentar 1"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Approved Tasks"
                ],
                "summary": "Project Manager Access - edit the status in the approved task table",
                "description": "The user retrieves all task data",
                "responses": {
                    "200": {
                        "description": "Success: status changed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "edit the status in the approved task table.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "edit the status in the approved task table.",
                                            "type": "string",
                                            "example": "status changed successfully."
                                        },
                                        "data": {
                                            "description": "edit the status in the approved task table.",
                                            "properties": {
                                                "user_id": {
                                                    "description": "edit the status in the approved task table.",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "task_id": {
                                                    "description": "edit the status in the approved task table.",
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "status": {
                                                    "description": "edit the status in the approved task table.",
                                                    "type": "string",
                                                    "example": "approved"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task-pending": {
            "get": {
                "tags": [
                    "Approved Tasks"
                ],
                "summary": "Project Manager Access - Retrieve all tasks that have pending status",
                "description": "Project Manager retrieves all task data Pending",
                "responses": {
                    "200": {
                        "description": "Success: The task was successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve all tasks that have pending status.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Retrieve all tasks that have pending status.",
                                            "type": "string",
                                            "example": "The task was successfully retrieved."
                                        },
                                        "data": {
                                            "description": "Retrieve all tasks that have pending status.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "description": "Retrieve all tasks that have pending status.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Retrieve all tasks that have pending status.",
                                                        "type": "string",
                                                        "example": "Tugas Pertama pada Project Pertama"
                                                    },
                                                    "project_id": {
                                                        "description": "Retrieve all tasks that have pending status.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "deadline": {
                                                        "description": "Retrieve all tasks that have pending status.",
                                                        "type": "string",
                                                        "example": "2023-11-27 10:50:10"
                                                    },
                                                    "description": {
                                                        "description": "Retrieve all tasks that have pending status.",
                                                        "type": "text",
                                                        "example": "Ini adalah tugas pertama saya dari Project pertama"
                                                    },
                                                    "status": {
                                                        "description": "Retrieve all tasks that have pending status.",
                                                        "type": "string",
                                                        "enum": [
                                                            "to-do",
                                                            "in progress",
                                                            "completed"
                                                        ],
                                                        "example": "completed"
                                                    },
                                                    "comment": {
                                                        "description": "Retrieve all tasks that have pending status.",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "comment": {
                                                                    "description": "Retrieve all tasks that have pending status.",
                                                                    "type": "text",
                                                                    "example": "Ini adalah komentar 1"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task-approved": {
            "get": {
                "tags": [
                    "Approved Tasks"
                ],
                "summary": "Project Manager Access - Retrieve all tasks that have Approved status",
                "description": "Project Manager retrieves all task data Approved",
                "responses": {
                    "200": {
                        "description": "Success: The task was successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Retrieve all tasks that have Approved status.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Retrieve all tasks that have Approved status.",
                                            "type": "string",
                                            "example": "The task was successfully retrieved."
                                        },
                                        "data": {
                                            "description": "Retrieve all tasks that have Approved status.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "description": "Retrieve all tasks that have Approved status.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Retrieve all tasks that have Approved status.",
                                                        "type": "string",
                                                        "example": "Tugas Pertama pada Project Pertama"
                                                    },
                                                    "project_id": {
                                                        "description": "Retrieve all tasks that have Approved status.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "deadline": {
                                                        "description": "Retrieve all tasks that have Approved status.",
                                                        "type": "string",
                                                        "example": "2023-11-27 10:50:10"
                                                    },
                                                    "description": {
                                                        "description": "Retrieve all tasks that have Approved status.",
                                                        "type": "text",
                                                        "example": "Ini adalah tugas pertama saya dari Project pertama"
                                                    },
                                                    "status": {
                                                        "description": "Retrieve all tasks that have Approved status.",
                                                        "type": "string",
                                                        "enum": [
                                                            "to-do",
                                                            "in progress",
                                                            "completed"
                                                        ],
                                                        "example": "completed"
                                                    },
                                                    "comment": {
                                                        "description": "Retrieve all tasks that have Approved status.",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "comment": {
                                                                    "description": "Retrieve all tasks that have Approved status.",
                                                                    "type": "text",
                                                                    "example": "Ini adalah komentar 1"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/{project_id}/list-task": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Project Manager & Member Access - Get Task by Project",
                "description": "Users take Tasks based on Projects",
                "responses": {
                    "200": {
                        "description": "Success: Assignments based on Project have been successfully taken.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Get Task by Project.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Get Task by Project.",
                                            "type": "string",
                                            "example": "Assignments based on Project have been successfully taken."
                                        },
                                        "tasks": {
                                            "description": "Get Task by Project.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "description": "Get Task by Project.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Get Task by Project.",
                                                        "type": "string",
                                                        "example": "Tugas Pertama pada Project Pertama"
                                                    },
                                                    "project_id": {
                                                        "description": "Get Task by Project.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "deadline": {
                                                        "description": "Get Task by Project.",
                                                        "type": "string",
                                                        "example": "2023-11-27 10:50:10"
                                                    },
                                                    "description": {
                                                        "description": "Get Task by Project.",
                                                        "type": "text",
                                                        "example": "Ini adalah tugas pertama saya dari Project pertama"
                                                    },
                                                    "status": {
                                                        "description": "Get Task by Project.",
                                                        "type": "string",
                                                        "enum": [
                                                            "to-do",
                                                            "in progress",
                                                            "completed"
                                                        ],
                                                        "example": "completed"
                                                    },
                                                    "comment": {
                                                        "description": "Get Task by Project.",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "comment": {
                                                                    "description": "Get Task by Project.",
                                                                    "type": "text",
                                                                    "example": "Ini adalah komentar 1"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/{task_id}/list-comment": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Project Manager & Member Access - Get comments for a specific task",
                "description": "Users take comment based on Projects",
                "responses": {
                    "200": {
                        "description": "Success: comments based on the task being successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Get comments for a specific task.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Get comments for a specific task.",
                                            "type": "string",
                                            "example": "comments based on the task being successfully retrieved."
                                        },
                                        "tasks": {
                                            "description": "Get comments for a specific task.",
                                            "properties": {
                                                "comment": {
                                                    "description": "Get comments for a specific task.",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "comment": {
                                                                "description": "Get comments for a specific task.",
                                                                "type": "text",
                                                                "example": "Ini adalah komentar 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: task not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Get comments for a specific task.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Get comments for a specific task.",
                                            "type": "string",
                                            "example": "task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/{project_id}/add-task": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Project Manager & Member Access - Add Task to Project",
                "description": "User Add Task to Project",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Add Task to Project.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Add Task to Project.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: task added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Add Task to Project.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Add Task to Project.",
                                            "type": "string",
                                            "example": "task added successfully."
                                        },
                                        "data": {
                                            "description": "Add Task to Project.",
                                            "properties": {
                                                "name": {
                                                    "description": "Add Task to Project.",
                                                    "type": "string",
                                                    "example": "Testing input tugas 1 dari project 1"
                                                },
                                                "description": {
                                                    "description": "Add Task to Project.",
                                                    "type": "string",
                                                    "example": "ini isi dari Tugas 1"
                                                },
                                                "user_id": {
                                                    "description": "Add Task to Project.",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "project_id": {
                                                    "description": "Add Task to Project.",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Error: You do not have permission to add tasks to this project.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Add Task to Project.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Add Task to Project.",
                                            "type": "string",
                                            "example": "You do not have permission to add tasks to this project."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Add Task to Project.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Add Task to Project.",
                                            "type": "string",
                                            "example": "Project not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/{task_id}/add-comment": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Project Manager & Member Access - Add Comment to Task",
                "description": "User Add Comment to Task",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "description": "Add Comment to Task.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: comment added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Add Comment to Task.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Add Comment to Task.",
                                            "type": "string",
                                            "example": "comment added successfully."
                                        },
                                        "data": {
                                            "description": "Add Comment to Task.",
                                            "properties": {
                                                "name": {
                                                    "description": "Add Comment to Task.",
                                                    "type": "string",
                                                    "example": "Testing input tugas 1 dari project 1"
                                                },
                                                "description": {
                                                    "description": "Add Comment to Task.",
                                                    "type": "string",
                                                    "example": "ini isi dari Tugas 1"
                                                },
                                                "user_id": {
                                                    "description": "Add Comment to Task.",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "project_id": {
                                                    "description": "Add Comment to Task.",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "comment": {
                                                    "description": "Add Comment to Task.",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "comment": {
                                                                "description": "Add Comment to Task.",
                                                                "type": "text",
                                                                "example": "Ini adalah komentar 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Comment is Required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Add Comment to Task.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Add Comment to Task.",
                                            "type": "string",
                                            "example": "Comment is Required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Task not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Add Comment to Task.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Add Comment to Task.",
                                            "type": "string",
                                            "example": "Task not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/{task_id}/edit-status": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Project Manager & Member Access - Update Task Status",
                "description": "User Update Task Status",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "Update Task Status.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: task status updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Update Task Status.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Update Task Status.",
                                            "type": "string",
                                            "example": "task status updated successfully."
                                        },
                                        "data": {
                                            "description": "Update Task Status.",
                                            "properties": {
                                                "user_id": {
                                                    "description": "Update Task Status.",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "Update Task Status.",
                                                    "type": "string",
                                                    "example": "Testing input tugas 1 dari project 1"
                                                },
                                                "project_id": {
                                                    "description": "Update Task Status.",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "deadline": {
                                                    "description": "Update Task Status.",
                                                    "type": "string",
                                                    "example": "2023-11-27 10:50:10"
                                                },
                                                "description": {
                                                    "description": "Update Task Status.",
                                                    "type": "string",
                                                    "example": "ini isi dari Tugas 1"
                                                },
                                                "status": {
                                                    "description": "Update Task Status.",
                                                    "type": "string",
                                                    "example": "to-do"
                                                },
                                                "comment": {
                                                    "description": "Update Task Status.",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "comment": {
                                                                "description": "Update Task Status.",
                                                                "type": "text",
                                                                "example": "Ini adalah komentar 1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Status is Required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Update Task Status.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Update Task Status.",
                                            "type": "string",
                                            "example": "Status is Required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Task not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Update Task Status.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Update Task Status.",
                                            "type": "string",
                                            "example": "Task not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    }
                },
                "type": "object"
            },
            "Point": {
                "properties": {
                    "user_id": {
                        "type": "bigInteger",
                        "example": 3
                    },
                    "main_points": {
                        "type": "bigInteger",
                        "example": 200
                    },
                    "reward_points": {
                        "type": "bigInteger",
                        "example": 300
                    },
                    "flag_reward_points": {
                        "type": "boolean",
                        "example": 1
                    },
                    "reward_point_before_claims": {
                        "type": "bigInteger",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "Approved Tasks": {
                "properties": {
                    "user_id": {
                        "type": "BigInteger",
                        "example": 1
                    },
                    "task_id": {
                        "type": "BigInteger",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved"
                        ],
                        "example": "completed"
                    },
                    "comment": {
                        "type": "text",
                        "example": "Testing Comment"
                    }
                },
                "type": "object"
            },
            "Task": {
                "properties": {
                    "user_id": {
                        "type": "Integer",
                        "example": 3
                    },
                    "name": {
                        "type": "string",
                        "example": "Task 1"
                    },
                    "project_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "deadline": {
                        "type": "date"
                    },
                    "description": {
                        "type": "text",
                        "example": "Ini task 1 dari Project 1"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "to-do",
                            "in progress",
                            "completed"
                        ],
                        "example": "completed"
                    },
                    "comment": {
                        "type": "text",
                        "example": "Testing Comment"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "401": {
                "description": "Error: User not authenticated.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "Transfer reward_points to main_points",
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "description": "Transfer reward_points to main_points",
                                    "type": "string",
                                    "example": "User not authenticated."
                                },
                                "data": {
                                    "description": "Transfer reward_points to main_points",
                                    "type": "string",
                                    "example": null
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    }
}